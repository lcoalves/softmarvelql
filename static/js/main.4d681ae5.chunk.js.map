{"version":3,"sources":["hooks/character.jsx","hooks/index.jsx","config/keys.js","services/api.jsx","store/ducks/character.js","utils/alphabet.js","components/AlphabetNavigation/styles.js","components/AlphabetNavigation/index.jsx","components/CharacterSlider/CharacterCard/styles.js","components/CharacterSlider/CharacterCard/index.jsx","components/CharacterSlider/styles.js","components/CharacterSlider/index.jsx","pages/Main/styles.js","pages/Main/index.jsx","pages/Character/styles.js","pages/Character/index.jsx","routes/index.jsx","store/ducks/index.js","store/sagas/index.js","store/index.js","styles/global.jsx","App.jsx","serviceWorker.js","index.js","assets/logo.png","assets/softplanbackground.png"],"names":["CharacterContext","createContext","CharacterProvider","children","useState","id","name","description","thumbnail","path","extension","series","available","collectionURI","items","resourceURI","returned","selectedCharacter","setSelectedCharacter","setCharacter","useCallback","Provider","value","character","useCharacter","context","useContext","Error","AppProvider","api","axios","create","baseURL","interceptors","request","use","a","config","apiPublicKey","keys","apiPrivateKey","currentTimeStamp","Date","getTime","params","apikey","ts","currentHash","md5","hash","Types","INITIAL_STATE","loading","error","letter","characters","Creators","newLetter","type","payload","Container","styled","Pagination","NavItem","PaginationItem","NavLink","PaginationLink","AlphabetNavigation","useSelector","state","dispatch","useDispatch","handleChangeLetter","CharacterActions","useEffect","alphabet","map","alphabetLetter","key","active","onClick","href","div","Thumbnail","props","src","Name","CharacterCard","isActive","history","useHistory","data-testid","push","CharacterSlider","centered","infinite","arrows","slidesPerPage","slidesPerScroll","keepDirectionWhenDragging","arrowLeft","size","arrowLeftDisabled","arrowRight","arrowRightDisabled","addArrowClickHandler","breakpoints","640","900","1024","length","Title","h1","Form","form","hasError","css","shade","span","Main","search","setSearch","inputError","setInputError","event","preventDefault","get","response","data","results","logo","width","alt","onSubmit","placeholder","onChange","e","target","Header","header","TitleContainer","isEditing","TitleInput","input","Description","p","DescriptionInput","textarea","SeriesCount","h2","SeriesList","ul","SerieItem","li","Character","editing","setEditing","localCharacter","setLocalCharacter","handleChange","to","serie","Routes","exact","component","combineReducers","action","changeLetter","rootSaga","put","call","offset","limit","nameStartsWith","all","takeLatest","CharacterTypes","middlewares","sagaMiddleware","createSagaMiddleware","sagaMonitor","enhancer","applyMiddleware","store","createStore","reducers","run","sagas","createGlobalStyle","softplanbackground","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message","module","exports"],"mappings":"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","file":"static/js/main.4d681ae5.chunk.js","sourcesContent":["import React, { createContext, useCallback, useState, useContext } from 'react';\n\nconst CharacterContext = createContext({});\n\nconst CharacterProvider = ({ children }) => {\n  const [selectedCharacter, setSelectedCharacter] = useState({\n    id: 1011334,\n    name: 'A-Bomb (HAS)',\n    description:\n      \"Rick Jones has been Hulk's best bud since day one, but now he's more than a friend...he's a teammate! Transformed by a Gamma energy explosion, A-Bomb's thick, armored skin is just as strong and powerful as it is blue. And when he curls into action, he uses it like a giant bowling ball of destruction!\",\n    thumbnail: {\n      path: 'http://i.annihil.us/u/prod/marvel/i/mg/3/20/5232158de5b16',\n      extension: 'jpg',\n    },\n    series: {\n      available: 2,\n      collectionURI:\n        'http://gateway.marvel.com/v1/public/characters/1017100/series',\n      items: [\n        {\n          resourceURI: 'http://gateway.marvel.com/v1/public/series/17765',\n          name: 'FREE COMIC BOOK DAY 2013 1 (2013)',\n        },\n        {\n          resourceURI: 'http://gateway.marvel.com/v1/public/series/3374',\n          name: 'Hulk (2008 - 2012)',\n        },\n        {\n          resourceURI: 'http://gateway.marvel.com/v1/public/series/3374',\n          name: 'Hulk (2008 - 2012)2',\n        },\n        {\n          resourceURI: 'http://gateway.marvel.com/v1/public/series/3374',\n          name: 'Hulk (2008 - 2012)3',\n        },\n        {\n          resourceURI: 'http://gateway.marvel.com/v1/public/series/3374',\n          name: 'Hulk (2008 - 2012)4',\n        },\n        {\n          resourceURI: 'http://gateway.marvel.com/v1/public/series/3374',\n          name: 'Hulk (2008 - 2012)5',\n        },\n        {\n          resourceURI: 'http://gateway.marvel.com/v1/public/series/3374',\n          name: 'Hulk (2008 - 2012)6',\n        },\n        {\n          resourceURI: 'http://gateway.marvel.com/v1/public/series/3374',\n          name: 'Hulk (2008 - 2012)7',\n        },\n        {\n          resourceURI: 'http://gateway.marvel.com/v1/public/series/3374',\n          name: 'Hulk (2008 - 2012)8',\n        },\n        {\n          resourceURI: 'http://gateway.marvel.com/v1/public/series/3374',\n          name: 'Hulk (2008 - 2012)9',\n        },\n        {\n          resourceURI: 'http://gateway.marvel.com/v1/public/series/3374',\n          name: 'Hulk (2008 - 2012)0',\n        },\n        {\n          resourceURI: 'http://gateway.marvel.com/v1/public/series/3374',\n          name: 'Hulk (2008 - 2012)00',\n        },\n      ],\n      returned: 2,\n    },\n  });\n\n  const setCharacter = useCallback(\n    ({ id, thumbnail, name, description, series }) => {\n      setSelectedCharacter({\n        id,\n        thumbnail,\n        name,\n        description,\n        series,\n      });\n    },\n    [],\n  );\n\n  return (\n    <CharacterContext.Provider\n      value={{ character: selectedCharacter, setCharacter }}\n    >\n      {children}\n    </CharacterContext.Provider>\n  );\n};\n\nfunction useCharacter() {\n  const context = useContext(CharacterContext);\n\n  if (!context) {\n    throw new Error('useAuth must be user within an AuthProvider.');\n  }\n\n  return context;\n}\n\nexport { CharacterProvider, useCharacter };\n","import React from 'react';\n\nimport { CharacterProvider } from './character';\n\nconst AppProvider = ({ children }) => (\n  <CharacterProvider>{children}</CharacterProvider>\n);\n\nexport default AppProvider;\n","export default {\n  MARVEL_PUBLIC_KEY: 'bbc76b5e4c35817a5b8adbb5f3ffc8c0',\n  MARVEL_PRIVATE_KEY: '795b9be7815adc8e73fc91fa2a2c5ac9ca01ab80',\n};\n","import axios from 'axios';\nimport md5 from 'md5';\n\nimport keys from '../config/keys';\n\nconst api = axios.create({\n  baseURL: 'https://gateway.marvel.com/v1/public',\n});\n\napi.interceptors.request.use(async (config) => {\n  const apiPublicKey = keys.MARVEL_PUBLIC_KEY;\n  const apiPrivateKey = keys.MARVEL_PRIVATE_KEY;\n  const currentTimeStamp = new Date().getTime();\n\n  if (apiPublicKey) {\n    config.params.apikey = apiPublicKey;\n  }\n\n  if (currentTimeStamp) {\n    config.params.ts = currentTimeStamp;\n  }\n\n  if (apiPrivateKey) {\n    const currentHash = md5(\n      `${currentTimeStamp}${apiPrivateKey}${apiPublicKey}`,\n    );\n    config.params.hash = currentHash;\n  }\n\n  return config;\n});\n\nexport default api;\n","/**\n * Action Types\n */\nexport const Types = {\n  LETTER_REQUEST: 'LETTER_REQUEST',\n  LETTER_SUCCESS: 'LETTER_SUCCESS',\n  LETTER_FAILURE: 'LETTER_FAILURE',\n\n  REQUEST: 'CHARACTER_REQUEST',\n  SUCCESS: 'CHARACTER_SUCCESS',\n  FAILURE: 'CHARACTER_FAILURE',\n};\n\n/**\n * Reducers\n */\nexport const INITIAL_STATE = {\n  loading: false,\n  error: false,\n  letter: 'A',\n  characters: [],\n};\n\nexport default function character(state = INITIAL_STATE, action) {\n  switch (action.type) {\n    case Types.LETTER_REQUEST:\n      return { ...state, loading: true };\n    case Types.LETTER_SUCCESS:\n      return {\n        ...state,\n        error: false,\n        loading: false,\n        letter: action.payload.newLetter,\n      };\n    case Types.LETTER_FAILURE:\n      return {\n        ...state,\n        error: true,\n        loading: false,\n      };\n\n    case Types.REQUEST:\n      return { ...state, loading: true };\n    case Types.SUCCESS:\n      return {\n        ...state,\n        error: false,\n        loading: false,\n        characters: action.payload.characters,\n      };\n    case Types.FAILURE:\n      return {\n        ...state,\n        error: true,\n        loading: false,\n      };\n    default:\n      return state;\n  }\n}\n\n/**\n * Actions Creators\n */\nexport const Creators = {\n  letterRequest: (newLetter) => ({\n    type: Types.LETTER_REQUEST,\n    payload: {\n      newLetter,\n    },\n  }),\n  letterSuccess: (newLetter) => ({\n    type: Types.LETTER_SUCCESS,\n    payload: {\n      newLetter,\n    },\n  }),\n  letterFailure: () => ({\n    type: Types.LETTER_FAILURE,\n  }),\n\n  characterRequest: (letter) => ({\n    type: Types.REQUEST,\n    payload: {\n      letter,\n    },\n  }),\n  characterSuccess: (characters) => ({\n    type: Types.SUCCESS,\n    payload: {\n      characters,\n    },\n  }),\n  characterFailure: () => ({\n    type: Types.FAILURE,\n  }),\n};\n","export default [\n  'A',\n  'B',\n  'C',\n  'D',\n  'E',\n  'F',\n  'G',\n  'H',\n  'I',\n  'J',\n  'K',\n  'L',\n  'M',\n  'N',\n  'O',\n  'P',\n  'Q',\n  'R',\n  'S',\n  'T',\n  'U',\n  'V',\n  'W',\n  'X',\n  'Y',\n  'Z',\n];\n","import styled from 'styled-components';\n\nimport { Pagination, PaginationItem, PaginationLink } from 'reactstrap';\n\nexport const Container = styled(Pagination)`\n  margin-top: 40px;\n\n  ul {\n    display: flex;\n    list-style: none;\n    flex-wrap: wrap;\n  }\n`;\n\nexport const NavItem = styled(PaginationItem)`\n  flex: 1;\n  padding: 10px;\n  background: #e6e6eb;\n  cursor: pointer;\n  border-radius: 5px;\n  margin-top: 4px;\n\n  @media (max-width: 1024px) {\n    width: 27px;\n  }\n\n  & + li {\n    margin-left: 4px;\n  }\n\n  a {\n    color: #3a3a3a;\n    text-decoration: none;\n  }\n\n  &:hover {\n    background: #3a3a3a;\n\n    a {\n      color: #e6e6eb;\n    }\n  }\n\n  &.active {\n    background: #3a3a3a;\n\n    a {\n      color: #e6e6eb;\n    }\n  }\n`;\n\nexport const NavLink = styled(PaginationLink)`\n  font-weight: 700;\n`;\n","import React, { useEffect, useCallback } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { Creators as CharacterActions } from '../../store/ducks/character';\n\nimport alphabet from '../../utils/alphabet';\n\nimport { Container, NavItem, NavLink } from './styles';\n\nconst AlphabetNavigation = () => {\n  const letter = useSelector((state) => state.character.letter);\n\n  const dispatch = useDispatch();\n\n  const handleChangeLetter = useCallback(\n    (newLetter) => {\n      dispatch(CharacterActions.letterRequest(newLetter));\n    },\n    [dispatch],\n  );\n\n  useEffect(() => {\n    dispatch(CharacterActions.characterRequest(letter));\n  }, [dispatch, letter]);\n\n  return (\n    <Container>\n      {alphabet.map((alphabetLetter) => (\n        <NavItem\n          key={alphabetLetter}\n          active={alphabetLetter === letter}\n          onClick={() => handleChangeLetter(alphabetLetter)}\n        >\n          <NavLink href=\"#\">{alphabetLetter}</NavLink>\n        </NavItem>\n      ))}\n    </Container>\n  );\n};\n\nexport default AlphabetNavigation;\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  /* display: flex; */\n  /* flex-direction: column; */\n  width: 90%;\n  height: 200px;\n  background: #fff;\n  border-radius: 5px;\n  -moz-border-radius: 5px;\n  transition: all 0.2s;\n\n  cursor: pointer;\n`;\n\nexport const Thumbnail = styled.div`\n  border-radius: 5px 5px 0 0;\n  background-image: url(${(props) => props.src});\n  background-size: cover;\n  width: 100%;\n  height: 160px;\n`;\n\nexport const Name = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 40px;\n  padding: 8px;\n  text-align: center;\n  font-weight: 700;\n  color: #3a3a3a;\n`;\n","import React from 'react';\nimport { useHistory } from 'react-router-dom';\n\nimport { useCharacter } from '../../../hooks/character';\nimport { Container, Thumbnail, Name } from './styles';\n\nconst CharacterCard = ({\n  id,\n  thumbnail,\n  name,\n  description,\n  series,\n  isActive,\n}) => {\n  const { setCharacter } = useCharacter();\n  const history = useHistory();\n\n  function handleSelectCharacter() {\n    setCharacter({\n      id,\n      thumbnail,\n      name,\n      description,\n      series,\n    });\n    history.push(`/character`);\n  }\n\n  return (\n    <Container\n      data-testid=\"characterCard\"\n      isActive={isActive}\n      onClick={handleSelectCharacter}\n    >\n      <Thumbnail\n        data-testid=\"characterCardImg\"\n        src={`${thumbnail.path}.${thumbnail.extension}`}\n      />\n      <Name data-testid=\"characterCardName\">{name}</Name>\n    </Container>\n  );\n};\n\nexport default CharacterCard;\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  margin-top: 40px;\n\n  svg {\n    cursor: pointer;\n  }\n`;\n","import React from 'react';\nimport {\n  FaAngleDoubleLeft,\n  FaAngleDoubleRight,\n  FaAngleLeft,\n  FaAngleRight,\n} from 'react-icons/fa';\n\nimport Carousel from '@brainhubeu/react-carousel';\nimport '@brainhubeu/react-carousel/lib/style.css';\n\nimport CharacterCard from './CharacterCard';\n\nimport { Container } from './styles';\n\nconst CharacterSlider = ({ characters }) => {\n  return (\n    <Container>\n      <Carousel\n        centered\n        infinite\n        arrows\n        slidesPerPage={5}\n        slidesPerScroll={5}\n        keepDirectionWhenDragging\n        arrowLeft={<FaAngleDoubleLeft size={28} />}\n        arrowLeftDisabled={<FaAngleLeft size={28} />}\n        arrowRight={<FaAngleDoubleRight size={28} />}\n        arrowRightDisabled={<FaAngleRight size={28} />}\n        addArrowClickHandler\n        breakpoints={{\n          640: {\n            slidesPerPage: 1,\n            slidesPerScroll: 1,\n            arrows: false,\n          },\n          900: {\n            slidesPerPage: 2,\n            slidesPerScroll: 2,\n            arrows: false,\n          },\n          1024: {\n            slidesPerPage: 3,\n            slidesPerScroll: 3,\n            arrows: false,\n          },\n        }}\n      >\n        {characters.length > 0 &&\n          characters.map((character) => (\n            <CharacterCard\n              key={character.id}\n              id={character.id}\n              thumbnail={character.thumbnail}\n              name={character.name}\n              description={character.description}\n              series={character.series}\n            />\n          ))}\n      </Carousel>\n    </Container>\n  );\n};\n\nexport default CharacterSlider;\n","import styled, { css } from 'styled-components';\nimport { shade } from 'polished';\n\nexport const Title = styled.h1`\n  font-size: 34px;\n  color: #3a3a3a;\n  max-width: 450px;\n  line-height: 56px;\n\n  margin-top: 40px;\n`;\n\nexport const Form = styled.form`\n  margin-top: 20px;\n  max-width: 700px;\n\n  display: flex;\n\n  input {\n    flex: 1;\n    height: 50px;\n    padding: 0 24px;\n    border: 0;\n    border-radius: 5px 0 0 5px;\n    color: #3a3a3a;\n    border: 2px solid #fff;\n    border-right: 0;\n\n    ${(props) =>\n      props.hasError &&\n      css`\n        border-color: #c53030;\n      `}\n\n    &::placeholder {\n      color: #a8a8b3;\n    }\n  }\n\n  button {\n    width: 210px;\n    height: 50px;\n    background: #3a3a3a;\n    border: 0;\n    border-radius: 0 5px 5px 0;\n    color: #fff;\n    font-weight: bold;\n    transition: background-color 0.2s;\n\n    &:hover {\n      background: ${shade(0.2, '#3a3a3a')};\n    }\n  }\n`;\n\nexport const Error = styled.span`\n  display: block;\n  color: #c53030;\n  margin-top: 8px;\n`;\n","import React, { useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\n\nimport { useCharacter } from '../../hooks/character';\n\nimport api from '../../services/api';\n\nimport logo from '../../assets/logo.png';\n\nimport AlphabetNavigation from '../../components/AlphabetNavigation';\nimport CharacterSlider from '../../components/CharacterSlider';\n\nimport { Title, Form, Error } from './styles';\n\nconst Main = () => {\n  const [search, setSearch] = useState('');\n  const [inputError, setInputError] = useState('');\n\n  const { setCharacter } = useCharacter();\n\n  const history = useHistory();\n\n  const characters = useSelector((state) => state.character.characters);\n\n  async function handleSearchCharacter(event) {\n    event.preventDefault();\n\n    if (!search) {\n      setInputError('Digite o nome do personagem.');\n    } else {\n      try {\n        const response = await api.get('/characters', {\n          params: {\n            name: search,\n          },\n        });\n\n        if (response.data.data.results.length > 0) {\n          const character = response.data.data.results[0];\n\n          setCharacter(character);\n          history.push(`/character`);\n        } else {\n          setInputError('Nenhum personagem foi encontrado.');\n        }\n      } catch (err) {\n        setInputError('Erro ao buscar por esse personagem.');\n      }\n    }\n  }\n\n  return (\n    <>\n      <img src={logo} width=\"150\" alt=\"SoftMarvel\" />\n      <Title>Explore os personagens da Marvel</Title>\n\n      <Form onSubmit={handleSearchCharacter} hasError={!!inputError}>\n        <input\n          placeholder=\"Digite o nome de um personagem\"\n          value={search}\n          onChange={(e) => setSearch(e.target.value)}\n        />\n        <button type=\"submit\">Pesquisar</button>\n      </Form>\n      {inputError && <Error>{inputError}</Error>}\n\n      <CharacterSlider characters={characters} />\n      <AlphabetNavigation />\n    </>\n  );\n};\n\nexport default Main;\n","import styled, { css } from 'styled-components';\n\nimport { shade } from 'polished';\n\nexport const Header = styled.header`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n\n  a {\n    display: flex;\n    align-items: center;\n    text-decoration: none;\n    font-weight: 700;\n    color: #a8a8b3;\n    transition: color 0.2s;\n\n    &:hover {\n      color: #666;\n    }\n\n    svg {\n      margin-right: 4px;\n    }\n  }\n`;\n\nexport const Container = styled.div`\n  display: flex;\n  justify-content: space-between;\n  margin-top: 40px;\n\n  img {\n    width: 400px;\n    border-radius: 5px;\n  }\n\n  div {\n    overflow-y: scroll;\n    max-height: 400px;\n\n    ::-webkit-scrollbar {\n      width: 5px;\n      height: 5px;\n      margin-left: 20px;\n    }\n\n    ::-webkit-scrollbar-button {\n      width: 20px;\n      height: 20px;\n    }\n\n    ::-webkit-scrollbar-thumb {\n      background: #656565;\n      border: 0px none #ffffff;\n      border-radius: 50px;\n    }\n\n    ::-webkit-scrollbar-thumb:hover {\n      background: #ffffff;\n    }\n\n    ::-webkit-scrollbar-thumb:active {\n      background: #000000;\n    }\n\n    ::-webkit-scrollbar-track {\n      background: #cdcdcd;\n      border: 0px none #ffffff;\n      border-radius: 50px;\n    }\n\n    ::-webkit-scrollbar-track:hover {\n      background: #666666;\n    }\n\n    ::-webkit-scrollbar-track:active {\n      background: #333333;\n    }\n\n    ::-webkit-scrollbar-corner {\n      background: transparent;\n    }\n  }\n\n  @media (max-width: 768px) {\n    flex-direction: column;\n    align-items: center;\n\n    img {\n      width: 300px;\n    }\n\n    div {\n      margin-top: 40px;\n      width: 100%;\n    }\n  }\n`;\n\nexport const TitleContainer = styled.div`\n  display: flex;\n  align-items: center;\n  line-height: 56px;\n\n  margin-top: 40px;\n\n  button {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    margin-left: 8px;\n    width: 60px;\n    height: 25px;\n\n    border: none;\n    border-radius: 5px;\n    background: #e5e5ea;\n    transition: background 0.2s;\n\n    svg {\n      margin-right: 4px;\n    }\n\n    &:hover {\n      background: ${shade(0.2, '#e5e5ea')};\n    }\n\n    ${(props) =>\n      props.isEditing &&\n      css`\n        background: #9cd98b;\n        color: #fff;\n\n        &:hover {\n          background: ${shade(0.2, '#9cd98b')};\n        }\n      `}\n  }\n`;\n\nexport const Title = styled.h1`\n  font-size: 34px;\n  color: #3a3a3a;\n`;\n\nexport const TitleInput = styled.input`\n  flex: 1;\n\n  border: none;\n  border-radius: 5px;\n  padding: 8px;\n  font-size: 34px;\n  color: #3a3a3a;\n`;\n\nexport const Description = styled.p`\n  color: #3a3a3a;\n  font-size: 18px;\n`;\n\nexport const DescriptionInput = styled.textarea`\n  width: 100%;\n  height: 100px;\n  max-width: 100%;\n  min-width: 100%;\n  max-height: 200px;\n  min-height: 100px;\n  margin-top: 8px;\n\n  border: none;\n  border-radius: 5px;\n  padding: 8px;\n  color: #3a3a3a;\n  font-size: 18px;\n`;\n\nexport const SeriesCount = styled.h2``;\n\nexport const SeriesList = styled.ul`\n  margin-top: 8px;\n  margin-right: 8px;\n`;\n\nexport const SerieItem = styled.li`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n\n  list-style: none;\n  width: 450px;\n  height: 50px;\n  background: #fff;\n  border-radius: 5px;\n  margin-top: 8px;\n\n  font-size: 18px;\n\n  @media (max-width: 768px) {\n    width: 100%;\n  }\n`;\n","import React, { useState, useEffect, useCallback } from 'react';\nimport { FiChevronLeft, FiEdit3, FiSave } from 'react-icons/fi';\nimport { Link } from 'react-router-dom';\n\nimport { useCharacter } from '../../hooks/character';\n\nimport logo from '../../assets/logo.png';\n\nimport {\n  Header,\n  Container,\n  TitleContainer,\n  Title,\n  TitleInput,\n  Description,\n  DescriptionInput,\n  SeriesCount,\n  SeriesList,\n  SerieItem,\n} from './styles';\n\nconst Character = () => {\n  const [editing, setEditing] = useState(false);\n  const [localCharacter, setLocalCharacter] = useState(null);\n\n  const { character } = useCharacter();\n\n  const handleChange = useCallback(\n    (event) => {\n      event.preventDefault();\n\n      const { name, value } = event.target;\n\n      setLocalCharacter({\n        ...localCharacter,\n        [`${name}`]: value,\n      });\n    },\n    [localCharacter],\n  );\n\n  useEffect(() => {\n    if (character) {\n      setLocalCharacter(character);\n    }\n  }, [character]);\n\n  return (\n    localCharacter && (\n      <>\n        <Header>\n          <img src={logo} width=\"150\" alt=\"SoftMarvel\" />\n          <Link to=\"/\">\n            <FiChevronLeft size={16} />\n            Voltar\n          </Link>\n        </Header>\n\n        <TitleContainer isEditing={editing}>\n          {!editing ? (\n            <Title>Character: {localCharacter.name}</Title>\n          ) : (\n            <TitleInput\n              name=\"name\"\n              value={localCharacter.name}\n              onChange={handleChange}\n            />\n          )}\n\n          {!editing ? (\n            <button type=\"button\" onClick={() => setEditing(true)}>\n              <FiEdit3 />\n              edit\n            </button>\n          ) : (\n            <button type=\"button\" onClick={() => setEditing(false)}>\n              <FiSave />\n              save\n            </button>\n          )}\n        </TitleContainer>\n\n        {!editing ? (\n          <Description>{localCharacter.description}</Description>\n        ) : (\n          <DescriptionInput\n            name=\"description\"\n            value={localCharacter.description}\n            onChange={handleChange}\n          />\n        )}\n        <Container>\n          <img\n            src={`${localCharacter.thumbnail.path}.${localCharacter.thumbnail.extension}`}\n            alt={localCharacter.name}\n          />\n\n          <div>\n            <SeriesCount>\n              Series ({localCharacter.series.available})\n            </SeriesCount>\n            <SeriesList>\n              {localCharacter.series.items.length > 0 &&\n                localCharacter.series.items.map((serie) => (\n                  <SerieItem key={serie.name}>{serie.name}</SerieItem>\n                ))}\n            </SeriesList>\n          </div>\n        </Container>\n      </>\n    )\n  );\n};\n\nexport default Character;\n","import React from 'react';\nimport { HashRouter, Switch, Route } from 'react-router-dom';\n\nimport Main from '../pages/Main';\nimport Character from '../pages/Character';\n\nconst Routes = () => (\n  <HashRouter>\n    <Switch>\n      <Route path=\"/\" exact component={Main} />\n      <Route path=\"/character\" component={Character} />\n    </Switch>\n  </HashRouter>\n);\n\nexport default Routes;\n","import { combineReducers } from 'redux';\n\nimport character from './character';\n\nexport default combineReducers({\n  character,\n});\n","import { all, takeLatest, put, call } from 'redux-saga/effects';\n\nimport api from '../../services/api';\n\nimport {\n  Creators as CharacterActions,\n  Types as CharacterTypes,\n} from '../ducks/character';\n\nfunction* changeLetter(action) {\n  try {\n    const { newLetter } = action.payload;\n\n    yield put(CharacterActions.letterSuccess(newLetter));\n  } catch (err) {\n    yield put(CharacterActions.letterFailure());\n  }\n}\n\nfunction* characters(action) {\n  try {\n    const { letter } = action.payload;\n\n    const response = yield call(api.get, '/characters', {\n      params: {\n        offset: 0,\n        limit: 50,\n        nameStartsWith: letter,\n      },\n    });\n\n    const { results } = response.data.data;\n\n    yield put(CharacterActions.characterSuccess(results));\n  } catch (err) {\n    yield put(CharacterActions.characterFailure());\n  }\n}\n\nexport default function* rootSaga() {\n  yield all([takeLatest(CharacterTypes.REQUEST, characters)]);\n  yield all([takeLatest(CharacterTypes.LETTER_REQUEST, changeLetter)]);\n}\n","import { createStore, applyMiddleware, compose } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\n\nimport reducers from './ducks';\nimport sagas from './sagas';\n\nconst middlewares = [];\n\nconst sagaMonitor =\n  process.env.NODE_ENV === 'development'\n    ? console.tron.createSagaMonitor()\n    : null;\n\nconst sagaMiddleware = createSagaMiddleware({ sagaMonitor });\n\nmiddlewares.push(sagaMiddleware);\n\nconst enhancer =\n  process.env.NODE_ENV === 'development'\n    ? compose(applyMiddleware(...middlewares), console.tron.createEnhancer())\n    : applyMiddleware(...middlewares);\n\nconst store = createStore(reducers, enhancer);\n\nsagaMiddleware.run(sagas);\n\nexport default store;\n","import { createGlobalStyle } from 'styled-components';\n\nimport softplanbackground from '../assets/softplanbackground.png';\n\nexport default createGlobalStyle`\n  * {\n    margin: 0;\n    padding: 0;\n    outline: 0;\n    box-sizing: border-box\n  }\n\n  body {\n    background: #F0F0F5 url(${softplanbackground}) no-repeat 70% top;\n    -webkit-font-smoothing: antialiased;\n  }\n\n  body, input, button {\n    font: 16px 'Marvel', sans-serif;\n  }\n\n  #root {\n    max-width: 960px;\n    margin: 0 auto;\n    padding: 40px 20px;\n  }\n\n  button {\n    cursor: pointer\n  }\n`;\n","import React from 'react';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nimport AppProvider from './hooks';\n\nimport './config/reactotron';\n\nimport Routes from './routes';\nimport store from './store';\n\nimport GlobalStyle from './styles/global';\n\nconst App = () => (\n  <Provider store={store}>\n    <Router>\n      <AppProvider>\n        <Routes />\n      </AppProvider>\n      <GlobalStyle />\n    </Router>\n  </Provider>\n);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.0e890504.png\";","module.exports = __webpack_public_path__ + \"static/media/softplanbackground.d4a2c1c4.png\";"],"sourceRoot":""}